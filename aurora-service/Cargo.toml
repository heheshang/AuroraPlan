[package]
name = "aurora-service"
version.workspace = true
edition.workspace = true
description.workspace = true
repository.workspace = true
keywords.workspace = true
categories.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
proto = { path = "../aurora-proto", package = "aurora-proto" }
aurora_common = { path = "../aurora-common", package = "aurora-common" }
entity = { path = "../aurora-entity", package = "aurora-entity" }
aurora_config = { path = "../aurora-config", package = "aurora-config" }
anyhow = { workspace = true }
sea-orm = { workspace = true, features = [
    "sqlx-postgres",
    "runtime-tokio-native-tls",
    "debug-print",
    "serde_json",
] }
serde = { workspace = true, features = ["derive"] }
# tokio = { workspace = true, features = ["full"], optional = true }
tokio = { workspace = true, features = ["full"] }
tonic = { workspace = true }
tonic-health = { workspace = true }
serde_json = { workspace = true }
chrono = { workspace = true }
# listenfd = { workspace = true, optional = true }
# tokio-stream = { version = "0.1", optional = true }
tracing = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, features = [
    "tracing-log",
    "fmt",
], optional = true }
listenfd = { workspace = true }
tokio-stream = { workspace = true, features = ["net"] }
# [features]
# client = ["dep:listenfd", "dep:tokio", "dep:tokio-stream"]
# server = ["dep:tokio"]
# aurora-service = ["dep:tokio"]
# full = ["server", "client", "aurora-service"]
# default = ["full"]
rs-snowflake = { workspace = true }

# [[bin]]
# name = "server"
# path = "src/server.rs"
[[bin]]
name = "client"
path = "src/client.rs"

# [[bin]]
# name = "server"
# path = "src/server.rs"
[[bin]]
name = "aurora-service"
path = "src/main.rs"

[features]
aurora-service = ["dep:tracing", "dep:tracing-subscriber"]
default = ["aurora-service"]
