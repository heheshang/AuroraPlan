syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

package ds_queue;


message DsQueue {

     int32 id=1 ;
     optional string queue_name=2 ;
     optional string  queue=3 ;
     optional string create_time=4 ;
     optional string update_time=5 ;
}


// Generated according to https://cloud.google.com/apis/design/standard_methods
service DsQueueService {
  rpc ListDsQueues(ListDsQueuesRequest) returns (ListDsQueuesResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/DsQueues"
    };
  }

  rpc GetDsQueue(GetDsQueueRequest) returns (   DsQueue) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=DsQueues/*}"
    };
  }
  rpc VerifyDsQueue(VerifyQueueRequest) returns ( VerifyQueue) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=DsQueues/*}"
    };
  }

  rpc CreateDsQueue(CreateDsQueueRequest) returns (DsQueue) {
    option (google.api.http) = {
      post: "/v1alpha1/DsQueues"
      body: "DsQueue"
    };
  }

  rpc UpdateDsQueue(UpdateDsQueueRequest) returns (DsQueue) {
    option (google.api.http) = {
      patch: "/v1alpha1/{DsQueue.name=DsQueues/*}"
      body: "DsQueue"
    };
  }

  rpc DeleteDsQueue(DeleteDsQueueRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=DsQueues/*}"
    };
  }
  rpc AllDsQueues (google.protobuf.Empty) returns (AllDsQueuesResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/DsQueues"
    };
  }
}

// message DsQueue {
// ! This should be defined elsewhere
// }
message AllDsQueuesResponse {
repeated DsQueue data = 1;
}

message ListDsQueuesRequest {

  int64 page_size = 1;
  int64 page_num = 2;
  optional string search_val=3 ;
}

message ListDsQueuesResponse {
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated DsQueue total_list = 1;
  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  int64 current_page = 2;
  int64 page_size = 3;
  int64 start = 4;
  int64 total = 5;
  int64 total_page = 6;

}

message GetDsQueueRequest {
  string queue = 1;
  string queue_name = 2;
}

message VerifyQueueRequest {
  string queue = 1;
  string queue_name = 2;
}
message VerifyQueue {
 optional DsQueue DsQueue = 1;
}
message CreateDsQueueRequest {

  string queue = 1;
  string queue_name = 2;
}

message UpdateDsQueueRequest {
  // The DsQueue resource which replaces the resource on the server.
  DsQueue DsQueue = 1;

  
}

message DeleteDsQueueRequest {
  // The resource name of the DsQueue to be deleted.
  int32 id = 1;
}
