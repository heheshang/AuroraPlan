syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

package ds_task_definition;

message DsTaskDefinition {

     int32 id=1 ;
     int64 code=2 ;
     optional string name=3 ;
     int32  version=4 ;
     optional string description=5 ;
     optional int64 project_code=6 ;
     optional int32 user_id=7 ;
     optional string  task_type=8 ;
     optional string  task_params=9 ;
     optional int32 flag=10 ;
     optional int32 task_priority=11 ;
     optional string  worker_group=12 ;
     optional int64 environment_code=13 ;
     optional int32 fail_retry_times=14 ;
     optional int32 fail_retry_interval=15 ;
     optional int32 timeout_flag=16 ;
     optional int32 timeout_notify_strategy=17 ;
     optional int32 timeout=18 ;
     optional int32 delay_time=19 ;
     optional int32 task_group_id=20 ;
     optional int32 task_group_priority=21 ;
     optional int32 resource_ids=22 ;
     optional string create_time=23 ;
     optional string  update_time=24 ;
}


// Generated according to https://cloud.google.com/apis/design/standard_methods
service DsTaskDefinitionService {
  rpc ListDsTaskDefinitions(ListDsTaskDefinitionsRequest) returns (ListDsTaskDefinitionsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/DsTaskDefinitions"
    };
  }

  rpc GetDsTaskDefinition(GetDsTaskDefinitionRequest) returns (DsTaskDefinition) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=DsTaskDefinitions/*}"
    };
  }

  rpc CreateDsTaskDefinition(CreateDsTaskDefinitionRequest) returns (DsTaskDefinition) {
    option (google.api.http) = {
      post: "/v1alpha1/DsTaskDefinitions"
      body: "DsTaskDefinition"
    };
  }

  rpc UpdateDsTaskDefinition(UpdateDsTaskDefinitionRequest) returns (DsTaskDefinition) {
    option (google.api.http) = {
      patch: "/v1alpha1/{DsTaskDefinition.name=DsTaskDefinitions/*}"
      body: "DsTaskDefinition"
    };
  }

  rpc DeleteDsTaskDefinition(DeleteDsTaskDefinitionRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=DsTaskDefinitions/*}"
    };
  }
}

// message DsTaskDefinition {
// ! This should be defined elsewhere
// }

message ListDsTaskDefinitionsRequest {


  // The maximum number of items to return.
  int32 page_size = 1;

 int32 page_num = 2;
}

message ListDsTaskDefinitionsResponse {
  // The field name should match the noun "DsTaskDefinition" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated DsTaskDefinition DsTaskDefinitions = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetDsTaskDefinitionRequest {
  // The field will contain name of the resource requested.
  string name = 1;
}

message CreateDsTaskDefinitionRequest {
  // The parent resource name where the DsTaskDefinition is to be created.
  string parent = 1;

  // The DsTaskDefinition id to use for this DsTaskDefinition.
  string DsTaskDefinition_id = 2;

  // The DsTaskDefinition resource to create.
  // The field name should match the Noun in the method name.
  DsTaskDefinition DsTaskDefinition = 3;
}

message UpdateDsTaskDefinitionRequest {
  // The DsTaskDefinition resource which replaces the resource on the server.
  DsTaskDefinition DsTaskDefinition = 1;

  // The update mask applies to the resource. For the `google.protobuf.FieldMask` definition,
  // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask
  google.protobuf.FieldMask update_mask = 2;
}

message DeleteDsTaskDefinitionRequest {
  // The resource name of the DsTaskDefinition to be deleted.
  string name = 1;
}
