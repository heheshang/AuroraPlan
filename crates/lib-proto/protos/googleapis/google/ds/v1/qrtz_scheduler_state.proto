
syntax = "proto3";

package qrtz_scheduler_state;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

message QrtzSchedulerState {
    string  sched_name=1;
    string instance_name=2;
    int64 last_checkin_time=3;
    int64 checkin_interval=4;

}
// Generated according to https://cloud.google.com/apis/design/standard_methods
service QrtzSchedulerStateService {
  rpc ListQrtzSchedulerStates(ListQrtzSchedulerStatesRequest) returns (ListQrtzSchedulerStatesResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/QrtzSchedulerStates"
    };
  }

  rpc GetQrtzSchedulerState(GetQrtzSchedulerStateRequest) returns (QrtzSchedulerState) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=QrtzSchedulerStates/*}"
    };
  }

  rpc CreateQrtzSchedulerState(CreateQrtzSchedulerStateRequest) returns (QrtzSchedulerState) {
    option (google.api.http) = {
      post: "/v1alpha1/QrtzSchedulerStates"
      body: "QrtzSchedulerState"
    };
  }

  rpc UpdateQrtzSchedulerState(UpdateQrtzSchedulerStateRequest) returns (QrtzSchedulerState) {
    option (google.api.http) = {
      patch: "/v1alpha1/{QrtzSchedulerState.name=QrtzSchedulerStates/*}"
      body: "QrtzSchedulerState"
    };
  }

  rpc DeleteQrtzSchedulerState(DeleteQrtzSchedulerStateRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=QrtzSchedulerStates/*}"
    };
  }
}

// message QrtzSchedulerState {
// ! This should be defined elsewhere
// }

message ListQrtzSchedulerStatesRequest {


  // The maximum number of items to return.
  int32 page_size = 1;

 int32 page_num = 2;
}

message ListQrtzSchedulerStatesResponse {
  // The field name should match the noun "QrtzSchedulerState" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated QrtzSchedulerState QrtzSchedulerStates = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetQrtzSchedulerStateRequest {
  // The field will contain name of the resource requested.
  string name = 1;
}

message CreateQrtzSchedulerStateRequest {
  // The parent resource name where the QrtzSchedulerState is to be created.
  string parent = 1;

  // The QrtzSchedulerState id to use for this QrtzSchedulerState.
  string QrtzSchedulerState_id = 2;

  // The QrtzSchedulerState resource to create.
  // The field name should match the Noun in the method name.
  QrtzSchedulerState QrtzSchedulerState = 3;
}

message UpdateQrtzSchedulerStateRequest {
  // The QrtzSchedulerState resource which replaces the resource on the server.
  QrtzSchedulerState QrtzSchedulerState = 1;

  // The update mask applies to the resource. For the `google.protobuf.FieldMask` definition,
  // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask
  google.protobuf.FieldMask update_mask = 2;
}

message DeleteQrtzSchedulerStateRequest {
  // The resource name of the QrtzSchedulerState to be deleted.
  string name = 1;
}
