syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

package ds_datasource;

message DsDatasource {

     int32  id=1 ;
     string name=2 ;
     optional string note=3 ;
     int32 DsDatasource=4 ;
     int32 user_id=5 ;
     string connection_params=6 ;
     string create_time=7 ;
     optional string update_time=8 ;
}


// Generated according to https://cloud.google.com/apis/design/standard_methods
service DsDatasourceService {
  rpc ListDsDatasources(ListDsDatasourcesRequest) returns (ListDsDatasourcesResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/DsDatasources"
    };
  }

  rpc GetDsDatasource(GetDsDatasourceRequest) returns (DsDatasource) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=DsDatasources/*}"
    };
  }

  rpc CreateDsDatasource(CreateDsDatasourceRequest) returns (DsDatasource) {
    option (google.api.http) = {
      post: "/v1alpha1/DsDatasources"
      body: "DsDatasource"
    };
  }

  rpc UpdateDsDatasource(UpdateDsDatasourceRequest) returns (DsDatasource) {
    option (google.api.http) = {
      patch: "/v1alpha1/{DsDatasource.name=DsDatasources/*}"
      body: "DsDatasource"
    };
  }

  rpc DeleteDsDatasource(DeleteDsDatasourceRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=DsDatasources/*}"
    };
  }
}

// message DsDatasource {
// ! This should be defined elsewhere
// }

message ListDsDatasourcesRequest {


  // The maximum number of items to return.
  int32 page_size = 1;

 int32 page_num = 2;
}

message ListDsDatasourcesResponse {
  // The field name should match the noun "DsDatasource" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated DsDatasource DsDatasources = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetDsDatasourceRequest {
  // The field will contain name of the resource requested.
  string name = 1;
}

message CreateDsDatasourceRequest {
  // The parent resource name where the DsDatasource is to be created.
  string parent = 1;

  // The DsDatasource id to use for this DsDatasource.
  string DsDatasource_id = 2;

  // The DsDatasource resource to create.
  // The field name should match the Noun in the method name.
  DsDatasource DsDatasource = 3;
}

message UpdateDsDatasourceRequest {
  // The DsDatasource resource which replaces the resource on the server.
  DsDatasource DsDatasource = 1;

  // The update mask applies to the resource. For the `google.protobuf.FieldMask` definition,
  // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask
  google.protobuf.FieldMask update_mask = 2;
}

message DeleteDsDatasourceRequest {
  // The resource name of the DsDatasource to be deleted.
  string name = 1;
}
