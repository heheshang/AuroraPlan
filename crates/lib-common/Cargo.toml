[package]
name = "lib-common"
version.workspace = true
edition.workspace = true
description.workspace = true
repository.workspace = true
keywords.workspace = true
categories.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]
default = ["cn_msg"]
cn_msg = []
en_msg = []
otel = ["dep:opentelemetry", "dep:tracing-opentelemetry", "dep:opentelemetry-aws", "dep:opentelemetry-otlp","dep:opentelemetry_sdk"]
# log_rs = ["dep:log", "dep:fern", "dep:humantime"]

[dependencies]
axum = { workspace = true }
regex = { workspace = true }
rs-snowflake = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serde_with = { workspace = true, optional = false }
tokio = { workspace = true, features = ["full"] }
tonic = { workspace = true }
typed-builder = "0.18.0"
anyhow.workspace = true
# log = { version = "0.4.20", features = ["std"],optional = true }
# fern = { workspace = true, features = ["chrono", "colored"],optional = true }
# humantime ={workspace = true,optional = true}
tracing.workspace = true
tracing-subscriber = { version = "0.3.11", features = ["env-filter"] }
# Implements the types defined in the OTel spec
opentelemetry = { version = "0.21.0", optional = true }
# Integration between the tracing crate and the opentelemetry crate
tracing-opentelemetry = { version = "0.22.0", optional = true }
# Provides a "propagator" to pass along an XrayId across services
opentelemetry-aws = { version = "0.9.0", optional = true }
# Allows you to send data to the OTel collector
opentelemetry-otlp = { version = "0.14.0", optional = true }
opentelemetry_sdk = { version = "0.21.2", optional = true }
