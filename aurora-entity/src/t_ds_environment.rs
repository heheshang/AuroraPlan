//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "t_ds_environment")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub code: i64,
    #[sea_orm(unique)]
    pub name: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub config: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    pub operator: Option<i32>,
    pub create_time: Option<DateTime>,
    pub update_time: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::t_ds_environment_worker_group_relation::Entity",
        from = "Column::Code",
        to = "super::t_ds_environment_worker_group_relation::Column::EnvironmentCode",
        has_many = "super::t_ds_environment_worker_group_relation::Entity"
    )]
    DsEnvironmentWorkerGroupRelation,
}
// impl RelationTrait for Relation{

// }
impl ActiveModelBehavior for ActiveModel {}

#[derive(Debug)]
pub struct EnvironmentToGroupLink;

impl Linked for EnvironmentToGroupLink {
    type FromEntity = Entity;

    type ToEntity = super::t_ds_environment_worker_group_relation::Entity;

    fn link(&self) -> Vec<RelationDef> {
        vec![Relation::DsEnvironmentWorkerGroupRelation.def()]
    }
}
