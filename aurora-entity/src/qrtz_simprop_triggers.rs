//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "qrtz_simprop_triggers")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub sched_name: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub trigger_name: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub trigger_group: String,
    pub str_prop_1: Option<String>,
    pub str_prop_2: Option<String>,
    pub str_prop_3: Option<String>,
    pub int_prop_1: Option<i32>,
    pub int_prop_2: Option<i32>,
    pub long_prop_1: Option<i64>,
    pub long_prop_2: Option<i64>,
    #[sea_orm(column_type = "Decimal(Some((13, 4)))", nullable)]
    pub dec_prop_1: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((13, 4)))", nullable)]
    pub dec_prop_2: Option<Decimal>,
    pub bool_prop_1: Option<bool>,
    pub bool_prop_2: Option<bool>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
