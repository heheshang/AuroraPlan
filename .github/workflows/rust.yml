name: Rust

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']

env:
    CARGO_TERM_COLOR: always

jobs:
    build-rust:
        strategy:
            matrix:
                platform: [ubuntu-latest]
        runs-on: ${{ matrix.platform }}
        services:
            postgres:
                image: postgres:14.5
                env:
                    POSTGRES_USER: superset
                    POSTGRES_PASSWORD: superset
                    POSTGRES_DB: Aurorascheduler
                ports:
                    - 15432:5432
                # Set health checks to wait until postgres has started
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Install Protoc
              uses: arduino/setup-protoc@v1
            - name: Install Rust
              run: rustup toolchain install stable --component llvm-tools-preview
            - name: Install cargo-llvm-cov
              uses: taiki-e/install-action@cargo-llvm-cov
            - name: Install cargo fmt
              run: rustup component add rustfmt
            - name: Install cargo clippy
              run: rustup component add clippy
            - name: install nextest
              uses: taiki-e/install-action@nextest
            - name: Install sea-orm-cli
              run: cargo install sea-orm-cli
            - uses: Swatinem/rust-cache@v1
            - name: Check code format
              run: cargo fmt -- --check
            - name: Check the package for errors
              run: cargo check --all
            - name: Lint rust sources
              # run: cargo clippy --all-targets --all-features --tests --benches -- -D warnings
              run: cargo clippy --all-targets -F cn_msg --tests --benches -- -D warnings
            - name: Execute rust tests
              # run: cargo nextest run --all-features
              run: cargo run -p migration
            - name: run aurora-service
              # run: cargo nextest run --all-features
              run: cargo run -p aurora-service --bin server
            - name: run aurora-api
              # run: cargo nextest run --all-features
              run: cargo run -p aurora-api 
            - name: Execute rust tests
              # run: cargo nextest run --all-features
              run: cargo nextest run -F cn_msg
