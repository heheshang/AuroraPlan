version: '3'
services:
    aurora-postgres:
        restart: always
        image: postgres:14.5
        environment:
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
            - POSTGRES_DB=Aurorascheduler
        ports:
            - 16432:5432
        volumes:
            - aurora-postgres:/var/lib/postgresql/data
        # Set health checks to wait until postgres has started
        healthcheck:
            test:
                [
                    'CMD',
                    'pg_isready',
                    '--username=root',
                    '--dbname=Aurorascheduler',
                ]
            interval: 5s
            timeout: 5s
            retries: 5
        networks:
            - aurora_plan

    aurora-plan:
        build:
            context: .
            dockerfile: Dockerfile
        image: aurora-plan:latest
        networks:
            - aurora_plan
    aurora-migration:
        image: aurora-plan:latest
        command: ['./deploy/migration']
        depends_on:
            # - db
            - aurora-postgres
        networks:
            - aurora_plan
    aurora-api:
        restart: always
        image: aurora-plan:latest

        # command: ['cargo', 'run', '-p', 'aurora-api', '--release']
        command: ['./deploy/aurora-api']
        ports:
            - '54321:54321'
        depends_on:
            # - db
            - aurora-service
        networks:
            - aurora_plan
    aurora-service:
        restart: always
        image: aurora-plan:latest

        # command:
        #     [
        #         'cargo',
        #         'run',
        #         '-p',
        #         'aurora-service',
        #         '--release',
        #     ]
        command: ['./deploy/aurora-service']
        ports:
            - '50051:50051'
        depends_on:
            - aurora-postgres
        networks:
            - aurora_plan
    aurora-test:
        image: aurora-plan:latest
        command:
            - /bin/bash
            - -c
            - |
                ./deploy/aurora-tests-authenticator 
                ./deploy/aurora-tests-rpc_client
        depends_on:
            - aurora-api
            - aurora-service
            - aurora-postgres
        networks:
            - aurora_plan
    aurora-ui:
        restart: always
        image: aurora-plan:latest
        ports:
            - '5174:80'
        depends_on:
            - aurora-api
        networks:
            - aurora_plan
networks:
    aurora_plan:
        driver: bridge

volumes:
    aurora-postgres:
    aurora-zookeeper:
    aurora-worker-data:
    aurora-logs:
    aurora-shared-local:
    aurora-resource-local:
    aurora-ui:
