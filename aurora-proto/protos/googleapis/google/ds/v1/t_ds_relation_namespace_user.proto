syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
package ds_relation_namespace_user;

message DsRelationNamespaceUser {

     int32 id=1 ;
     optional int32  user_id=2 ;
     optional int32 namespace_id=3 ;
     optional int32  perm=4 ;
     optional string  create_time=5 ;
     optional string update_time=6 ;
}


// Generated according to https://cloud.google.com/apis/design/standard_methods
service DsRelationNamespaceUserService {
  rpc ListDsRelationNamespaceUsers(ListDsRelationNamespaceUsersRequest) returns (ListDsRelationNamespaceUsersResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/DsRelationNamespaceUsers"
    };
  }

  rpc GetDsRelationNamespaceUser(GetDsRelationNamespaceUserRequest) returns (DsRelationNamespaceUser) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=DsRelationNamespaceUsers/*}"
    };
  }

  rpc CreateDsRelationNamespaceUser(CreateDsRelationNamespaceUserRequest) returns (DsRelationNamespaceUser) {
    option (google.api.http) = {
      post: "/v1alpha1/DsRelationNamespaceUsers"
      body: "DsRelationNamespaceUser"
    };
  }

  rpc UpdateDsRelationNamespaceUser(UpdateDsRelationNamespaceUserRequest) returns (DsRelationNamespaceUser) {
    option (google.api.http) = {
      patch: "/v1alpha1/{DsRelationNamespaceUser.name=DsRelationNamespaceUsers/*}"
      body: "DsRelationNamespaceUser"
    };
  }

  rpc DeleteDsRelationNamespaceUser(DeleteDsRelationNamespaceUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=DsRelationNamespaceUsers/*}"
    };
  }
}

// message DsRelationNamespaceUser {
// ! This should be defined elsewhere
// }

message ListDsRelationNamespaceUsersRequest {


  // The maximum number of items to return.
  int32 page_size = 1;

 int32 page_num = 2;
}

message ListDsRelationNamespaceUsersResponse {
  // The field name should match the noun "DsRelationNamespaceUser" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated DsRelationNamespaceUser DsRelationNamespaceUsers = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetDsRelationNamespaceUserRequest {
  // The field will contain name of the resource requested.
  string name = 1;
}

message CreateDsRelationNamespaceUserRequest {
  // The parent resource name where the DsRelationNamespaceUser is to be created.
  string parent = 1;

  // The DsRelationNamespaceUser id to use for this DsRelationNamespaceUser.
  string DsRelationNamespaceUser_id = 2;

  // The DsRelationNamespaceUser resource to create.
  // The field name should match the Noun in the method name.
  DsRelationNamespaceUser DsRelationNamespaceUser = 3;
}

message UpdateDsRelationNamespaceUserRequest {
  // The DsRelationNamespaceUser resource which replaces the resource on the server.
  DsRelationNamespaceUser DsRelationNamespaceUser = 1;

  // The update mask applies to the resource. For the `google.protobuf.FieldMask` definition,
  // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask
  google.protobuf.FieldMask update_mask = 2;
}

message DeleteDsRelationNamespaceUserRequest {
  // The resource name of the DsRelationNamespaceUser to be deleted.
  string name = 1;
}
